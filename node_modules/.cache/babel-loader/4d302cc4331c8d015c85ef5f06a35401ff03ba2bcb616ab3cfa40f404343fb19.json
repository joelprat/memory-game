{"ast":null,"code":"import styled from\"styled-components\";import{useStore}from\"../store/Store\";import{jsx as _jsx}from\"react/jsx-runtime\";const Box=styled.div`\n  width: 100%;\n  height: 100%;\n  border-radius: 1rem;\n  cursor: ${props=>props.isCardVisible?\"auto\":\"pointer\"};\n  background-color: ${props=>props.isCardPaired?\"rgba(0, 0, 0, 1);\":\"rgba(0, 0, 0, 0.5);\"};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n`;export const Card=props=>{const{handleOpenCards,openedCards,visibleCards}=useStore();const isCardPaired=visibleCards.some(visibleCard=>visibleCard===props.src);const isCardOpened=openedCards.some(openCard=>openCard.index===props.index);const handleIsCardVisible=()=>{handleOpenCards(props);};return isCardPaired||isCardOpened?/*#__PURE__*/_jsx(Box,{isCardVisible:true,isCardPaired:isCardPaired,onClick:handleIsCardVisible,children:props.src}):/*#__PURE__*/_jsx(Box,{isCardVisible:false,isCardPaired:isCardPaired,onClick:handleIsCardVisible});};","map":{"version":3,"names":["styled","useStore","jsx","_jsx","Box","div","props","isCardVisible","isCardPaired","Card","handleOpenCards","openedCards","visibleCards","some","visibleCard","src","isCardOpened","openCard","index","handleIsCardVisible","onClick","children"],"sources":["/Users/joel.prat/Documents/code/my-repos/memory-game/src/components/Card.tsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { Card as CardType } from \"../utils/types\";\nimport { useStore } from \"../store/Store\";\n\nconst Box = styled.div<{ isCardVisible: boolean; isCardPaired: boolean }>`\n  width: 100%;\n  height: 100%;\n  border-radius: 1rem;\n  cursor: ${(props) => (props.isCardVisible ? \"auto\" : \"pointer\")};\n  background-color: ${(props) =>\n    props.isCardPaired ? \"rgba(0, 0, 0, 1);\" : \"rgba(0, 0, 0, 0.5);\"};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n`;\n\nexport const Card = (props: CardType) => {\n  const { handleOpenCards, openedCards, visibleCards } = useStore();\n  const isCardPaired = visibleCards.some(\n    (visibleCard) => visibleCard === props.src\n  );\n  const isCardOpened = openedCards.some(\n    (openCard) => openCard.index === props.index\n  );\n\n  const handleIsCardVisible = () => {\n    handleOpenCards(props);\n  };\n\n  return isCardPaired || isCardOpened ? (\n    <Box\n      isCardVisible\n      isCardPaired={isCardPaired}\n      onClick={handleIsCardVisible}\n    >\n      {props.src}\n    </Box>\n  ) : (\n    <Box\n      isCardVisible={false}\n      isCardPaired={isCardPaired}\n      onClick={handleIsCardVisible}\n    />\n  );\n};\n"],"mappings":"AAAA,MAAO,CAAAA,MAAM,KAAM,mBAAmB,CAEtC,OAASC,QAAQ,KAAQ,gBAAgB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE1C,KAAM,CAAAC,GAAG,CAAGJ,MAAM,CAACK,GAAsD;AACzE;AACA;AACA;AACA,YAAaC,KAAK,EAAMA,KAAK,CAACC,aAAa,CAAG,MAAM,CAAG,SAAU;AACjE,sBAAuBD,KAAK,EACxBA,KAAK,CAACE,YAAY,CAAG,mBAAmB,CAAG,qBAAqB;AACpE;AACA;AACA;AACA;AACA,CAAC,CAED,MAAO,MAAM,CAAAC,IAAI,CAAIH,KAAe,EAAK,CACvC,KAAM,CAAEI,eAAe,CAAEC,WAAW,CAAEC,YAAa,CAAC,CAAGX,QAAQ,CAAC,CAAC,CACjE,KAAM,CAAAO,YAAY,CAAGI,YAAY,CAACC,IAAI,CACnCC,WAAW,EAAKA,WAAW,GAAKR,KAAK,CAACS,GACzC,CAAC,CACD,KAAM,CAAAC,YAAY,CAAGL,WAAW,CAACE,IAAI,CAClCI,QAAQ,EAAKA,QAAQ,CAACC,KAAK,GAAKZ,KAAK,CAACY,KACzC,CAAC,CAED,KAAM,CAAAC,mBAAmB,CAAGA,CAAA,GAAM,CAChCT,eAAe,CAACJ,KAAK,CAAC,CACxB,CAAC,CAED,MAAO,CAAAE,YAAY,EAAIQ,YAAY,cACjCb,IAAA,CAACC,GAAG,EACFG,aAAa,MACbC,YAAY,CAAEA,YAAa,CAC3BY,OAAO,CAAED,mBAAoB,CAAAE,QAAA,CAE5Bf,KAAK,CAACS,GAAG,CACP,CAAC,cAENZ,IAAA,CAACC,GAAG,EACFG,aAAa,CAAE,KAAM,CACrBC,YAAY,CAAEA,YAAa,CAC3BY,OAAO,CAAED,mBAAoB,CAC9B,CACF,CACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}